/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany1.supermarket;

import java.awt.print.PrinterException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class Billing extends javax.swing.JFrame {

    /**
     * Creates new form Billing
     */
    public Billing() {
        initComponents();
        
        all_products();
        get_categories();
        bill_area_build();
    }
    
    public void all_products() {
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/supermarket-database",
                    "root", "root");
            
            Statement stmt = con.createStatement();
            String query = "Select * From `supermarket-database`.products";
            ResultSet rs = stmt.executeQuery(query);
            
            // TODO : UPDATE TABLE 
            DefaultTableModel model = (DefaultTableModel)prodTable.getModel();
            model.setRowCount(0);
            while(rs.next()) {
                model.addRow(new String[] {rs.getString(1), rs.getString(2), 
                    rs.getString(3), rs.getString(4), rs.getString(5)});
            }
        } 
        catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
    
    int newQty;
    public void update_database() {
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/supermarket-database",
                    "root", "root");
            
            newQty = availQty - cartQty;
            
            Statement stmt = con.createStatement();
            String query = "UPDATE `supermarket-database`.products SET PRODQTY='"+newQty
                    +"' WHERE PRODID='"+prodId+"'";
            stmt.executeUpdate(query);
            all_products();
        }
        catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
    
    public void update_database2() {
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/supermarket-database",
                    "root", "root");
            
            newQty = newAvailQty + bill_prod_qty;
            
            Statement stmt = con.createStatement();
            String query = "UPDATE `supermarket-database`.products SET PRODQTY='"+newQty
                    +"' WHERE PRODID='"+bill_prod_id+"'";
            stmt.executeUpdate(query);
            all_products();
        }
        catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
    
    public void get_categories() {
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/supermarket-database",
                    "root", "root");
            
            Statement stmt = con.createStatement();
            String query = "Select * From `supermarket-database`.categories";
            ResultSet rs = stmt.executeQuery(query);
            while(rs.next()) {
                String myCat = rs.getString("Name");
                catCb.addItem(myCat);
            }
        }
        catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
    
    double Total;
    public void bill_area_build() {
        DefaultTableModel model = (DefaultTableModel) bill_details.getModel();
        int nRow = model.getRowCount(), nCol= model.getColumnCount();
        Object [][] tabledata = new Object [nRow][nCol];
        
        bill_area.setText(" ".repeat(45)+"***** IDEAL POINT *****"
            +"\nNUM\tPRODUCT\tPRICE\tQUANTITY\tTOTAL");
        Total=0;
        for(int i=0; i<nRow; i++) {
            bill_area.append("\n");
            for(int j=0; j<nCol; j++) {
                if(j==0){
                    tabledata[i][j] = (i+1);
                    bill_area.append(tabledata[i][j] + "\t");
                }
                else {
                    tabledata[i][j] = model.getValueAt(i, j);
                    bill_area.append(tabledata[i][j] + "\t");
                    if(j==nCol-1) 
                        Total+=Double.parseDouble(tabledata[i][j].toString());
                }
            }
            
            if(i==nRow-1)
                bill_area.append("\n\n\t\t\t\t"+Total+" LE");
        }
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        prod_name = new javax.swing.JTextField();
        prod_qty = new javax.swing.JTextField();
        catCb = new javax.swing.JComboBox<>();
        filterBtn = new javax.swing.JButton();
        refreshBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        prodTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        bill_area = new javax.swing.JTextArea();
        addBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        printBtn = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        bill_details = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        removeBtn = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Billing");

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("BILLING POINT");

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel3.setText("PROD NAME");

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel4.setText("QUANTITY");

        filterBtn.setBackground(new java.awt.Color(0, 0, 0));
        filterBtn.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        filterBtn.setForeground(new java.awt.Color(255, 255, 255));
        filterBtn.setText("Filter");
        filterBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterBtnActionPerformed(evt);
            }
        });

        refreshBtn.setBackground(new java.awt.Color(0, 0, 0));
        refreshBtn.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        refreshBtn.setForeground(new java.awt.Color(255, 255, 255));
        refreshBtn.setText("Refresh");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });

        prodTable.setBackground(new java.awt.Color(238, 238, 238));
        prodTable.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        prodTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "PROD ID", "PROD NAME", "PROD QTY", "PROD PRICE", "PROD CAT"
            }
        ));
        prodTable.setGridColor(new java.awt.Color(102, 102, 102));
        prodTable.setRowHeight(20);
        prodTable.setSelectionBackground(new java.awt.Color(102, 102, 102));
        prodTable.setSelectionForeground(new java.awt.Color(255, 255, 255));
        prodTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        prodTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                prodTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(prodTable);

        bill_area.setColumns(20);
        bill_area.setRows(5);
        bill_area.setFocusable(false);
        jScrollPane2.setViewportView(bill_area);

        addBtn.setBackground(new java.awt.Color(0, 0, 0));
        addBtn.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        addBtn.setForeground(new java.awt.Color(255, 255, 255));
        addBtn.setText("Add to Bill");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        clearBtn.setBackground(new java.awt.Color(0, 0, 0));
        clearBtn.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        clearBtn.setForeground(new java.awt.Color(255, 255, 255));
        clearBtn.setText("Clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        printBtn.setBackground(new java.awt.Color(0, 0, 0));
        printBtn.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        printBtn.setForeground(new java.awt.Color(255, 255, 255));
        printBtn.setText("Print");
        printBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printBtnActionPerformed(evt);
            }
        });

        bill_details.setBackground(new java.awt.Color(204, 204, 204));
        bill_details.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        bill_details.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PRODID", "PRODUCT", "PRICE", "QUANTITY", "TOTAL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bill_details.setAutoscrolls(false);
        bill_details.setGridColor(new java.awt.Color(102, 102, 102));
        bill_details.setRowHeight(20);
        bill_details.setSelectionBackground(new java.awt.Color(102, 102, 102));
        bill_details.setSelectionForeground(new java.awt.Color(255, 255, 255));
        bill_details.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        bill_details.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bill_detailsMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(bill_details);

        jLabel6.setText("-------------------- BILL DETAILS --------------------");

        removeBtn.setBackground(new java.awt.Color(0, 0, 0));
        removeBtn.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        removeBtn.setForeground(new java.awt.Color(255, 255, 255));
        removeBtn.setText("Remove from Bill");
        removeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(printBtn)
                                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(40, 40, 40))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(prod_qty, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(prod_name, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(154, 154, 154))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(addBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(catCb, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(filterBtn)
                                .addGap(18, 18, 18)
                                .addComponent(refreshBtn))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(removeBtn)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(clearBtn)
                            .addComponent(jLabel6))))
                .addContainerGap(24, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(369, 369, 369))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(prod_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(prod_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addBtn)
                            .addComponent(clearBtn))
                        .addGap(50, 50, 50))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel1)
                        .addGap(39, 39, 39)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(filterBtn)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(refreshBtn)
                                .addComponent(catCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(printBtn)
                    .addComponent(removeBtn))
                .addGap(24, 24, 24))
        );

        jMenu1.setText("LOGOUT");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(927, 531));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    int i=0, cartQty;
    double totalItemPrice;
    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO : ADD TO BILL
            if(prod_name.getText().isEmpty() || prod_qty.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Missing Information");
            }
            else {
                cartQty = Integer.valueOf(prod_qty.getText());
                i++;
                totalItemPrice = itemPrice * cartQty;
                // Total+=totalItemPrice;

                // add to bill table
                DefaultTableModel model = (DefaultTableModel)bill_details.getModel();
                model.addRow(new String[] {""+prodId, prod_name.getText(), 
                        ""+itemPrice, prod_qty.getText(), ""+totalItemPrice});

                update_database();

                // add to bill area
                bill_area_build();
                
                prod_name.setText("");
                prod_qty.setText("");
            }
    }//GEN-LAST:event_addBtnActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        prod_name.setText("");
        prod_qty.setText("");
    }//GEN-LAST:event_clearBtnActionPerformed

    private void printBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printBtnActionPerformed
        try {
            if(bill_details.getRowCount() != 0) 
                bill_area.print();
            else
                JOptionPane.showMessageDialog(this, "Bill is Empty!", "REQUEST DENIED", JOptionPane.ERROR_MESSAGE);
        } 
        catch (PrinterException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_printBtnActionPerformed

    private void filterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterBtnActionPerformed
        String selected_cat = catCb.getSelectedItem().toString();
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/supermarket-database", 
                        "root", "root");
            
            Statement stmt = con.createStatement();
            String query = "Select * From `supermarket-database`.products WHERE PRODCAT='"+selected_cat+"'";
            ResultSet rs = stmt.executeQuery(query);
            
            // TODO : UPDATE TABLE
            DefaultTableModel model = (DefaultTableModel)prodTable.getModel();
            model.setRowCount(0);
            while(rs.next()) {
                model.addRow(new String[] {rs.getString(1), rs.getString(2), 
                    rs.getString(3), rs.getString(4), rs.getString(5)});
            }
        }
        catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_filterBtnActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        all_products();
    }//GEN-LAST:event_refreshBtnActionPerformed
    
    
    int prodId, availQty;
    double itemPrice;
    private void prodTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prodTableMouseClicked

        // TODO : GET SELECTED PRODUCT (ROW) DETAILS
        DefaultTableModel model = (DefaultTableModel)prodTable.getModel();
        int row_num = prodTable.getSelectedRow();
        
        prodId = Integer.valueOf(model.getValueAt(row_num, 0).toString());
        availQty = Integer.valueOf(model.getValueAt(row_num, 2).toString());
        
        prod_name.setText(model.getValueAt(row_num, 1).toString());
        itemPrice = Double.valueOf(model.getValueAt(row_num, 3).toString());
    }//GEN-LAST:event_prodTableMouseClicked

    int bill_row_num, bill_prod_id, bill_prod_qty, newAvailQty;
    private void bill_detailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bill_detailsMouseClicked
        DefaultTableModel model = (DefaultTableModel)bill_details.getModel();
        bill_row_num = bill_details.getSelectedRow();
        
        bill_prod_id = Integer.valueOf(model.getValueAt(bill_row_num, 0).toString());
        bill_prod_qty = Integer.valueOf(model.getValueAt(bill_row_num, 3).toString());
        
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/supermarket-database",
                    "root", "root");
            
            Statement stmt = con.createStatement();
            String query = "Select * From `supermarket-database`.products WHERE PRODID='"+bill_prod_id+"'";
            ResultSet rs = stmt.executeQuery(query);
            while(rs.next()) {
                newAvailQty = Integer.valueOf(rs.getString("PRODQTY"));
            }
        } 
        catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_bill_detailsMouseClicked

    private void removeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeBtnActionPerformed
        DefaultTableModel model = (DefaultTableModel)bill_details.getModel();
        try {
            model.removeRow(bill_row_num);
            update_database2();
            bill_area_build();
        }
        catch(ArrayIndexOutOfBoundsException err) {
            JOptionPane.showMessageDialog(this, "Bill is Empty!!", "Attention", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_removeBtnActionPerformed

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        // TODO add your handling code here:
        new Login().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenu1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
       
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Billing().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JTextArea bill_area;
    private javax.swing.JTable bill_details;
    private javax.swing.JComboBox<String> catCb;
    private javax.swing.JButton clearBtn;
    private javax.swing.JButton filterBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton printBtn;
    private javax.swing.JTable prodTable;
    private javax.swing.JTextField prod_name;
    private javax.swing.JTextField prod_qty;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton removeBtn;
    // End of variables declaration//GEN-END:variables
}
